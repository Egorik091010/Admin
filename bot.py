from config import *
from create_db import DB_Manager
from telebot import TeleBot
import sqlite3
from telebot import types
import time
from telegram import InlineKeyboardMarkup, InlineKeyboardButton


bot = TeleBot(TOKEN)

conn = sqlite3.connect("help.db", check_same_thread=False)
cursor = conn.cursor()

@bot.message_handler(commands=['start'])
def start_command(message):
    bot.send_message(message.chat.id, """–ü—Ä–∏–≤–µ—Ç! –Ø —á–∞—Ç –±–æ—Ç –∫–æ—Ç–æ—Ä—ã–π –ø–æ–º–æ–∂–µ—Ç —Ç–µ–±–µ –µ—Å–ª–∏ —É —Ç–µ–±—è –≤–æ–∑–Ω–∏–∫–ª–∏ –≤–æ–ø—Ä–æ—Å—ã. 
/help - –Ω–∞–∂–º–∏ –Ω–∞ —ç—Ç—É –∫–æ–º–∞–Ω–¥—É –∏ —É–∑–Ω–∞–µ—à—å –±–æ–ª—å—à–µ –æ–±–æ –º–Ω–µ
""")

@bot.message_handler(commands=['help'])
def help(message):
    bot.send_message(message.chat.id, """–í—ã–±–µ—Ä–∏ –Ω—É–∂–Ω—É—é —Ç–µ–±–µ –∫–∞—Ç–µ–≥–æ—Ä–∏—é:
‚ú® /Frequently - –°–∞–º—ã–µ –∑–∞–¥–∞–≤–∞–µ–º—ã–µ –≤–æ–ø—Ä–æ—Å—ã
üìû /Contacs - –ù–∞—à–∏ –∫–æ–Ω—Ç–∞–∫—Ç—ã
üìç /Geoposition - –ù–∞—à–∞ –≥–µ–æ–ª–æ–∫–∞—Ü–∏—è
üí° /Question - –ó–∞–¥–∞—Ç—å —Å–≤–æ–π –≤–æ–ø—Ä–æ—Å
""")


@bot.message_handler(commands=['Frequently'])
def frequently(message):
    cursor.execute("SELECT id, questions FROM question")
    questions = cursor.fetchall()

    if not questions:
        bot.send_message(message.chat.id, "–í–æ–ø—Ä–æ—Å–æ–≤ –ø–æ–∫–∞ –Ω–µ—Ç.")
        return

    keyboard = types.InlineKeyboardMarkup()
    for q in questions:
        keyboard.add(types.InlineKeyboardButton(q[1], callback_data=str(q[0])))
    bot.send_message(message.chat.id, "–ï—Å–ª–∏ —Ö–æ—á–µ—à—å –≤–µ—Ä–Ω—É—Ç—å—Å—è —Ç–æ –Ω–∞–∂–º–∏ /help")
    bot.send_message(message.chat.id, "–í—ã–±–µ—Ä–∏ –≤–æ–ø—Ä–æ—Å, –∫–æ—Ç–æ—Ä—ã–π —É —Ç–µ–±—è –≤–æ–∑–Ω–∏–∫:", reply_markup=keyboard)


@bot.callback_query_handler(func=lambda call: True)
def callback_query(call):
    question_id = int(call.data)
    cursor.execute("SELECT answers FROM question WHERE id=?", (question_id,))
    result = cursor.fetchone()

    if result:
        bot.send_message(call.message.chat.id, result[0])
    else:
        bot.send_message(call.message.chat.id, "–û—Ç–≤–µ—Ç –Ω–µ –Ω–∞–π–¥–µ–Ω.")

    time.sleep(2)
    help(call.message)



@bot.message_handler(commands=['Contacs'])
def contacs(message):
    bot.send_message(message.chat.id, """ üìû –ù–∞—à–∏ –∫–æ–Ω—Ç–∞–∫—Ç—ã:
    Email - restourante@gmail.com
    Tel - 896755284""")
    time.sleep(2)
    help(message)


@bot.message_handler(commands=['Geoposition'])
def geoposition(message):
    keyboard = types.InlineKeyboardMarkup()
    button = types.InlineKeyboardButton("–°–¥–µ—Å—å –Ω–∞—à –∞–¥—Ä–µ—Å", url="https://maps.app.goo.gl/7doPBH9W1befydJKA")
    keyboard.add(button)
    bot.send_message(message.chat.id, "üìç –ú—ã –Ω–∞—Ö–æ–¥–∏–º—Å—è –∑–¥–µ—Å—å - ",reply_markup=keyboard)
    time.sleep(2)
    help(message)


@bot.message_handler(commands=['Question'])
def ask_question(message):
    bm = bot.send_message(message.chat.id, "–ù–∞–ø–∏—à–∏—Ç–µ –≤–∞—à –≤–æ–ø—Ä–æ—Å:")
    bot.register_next_step_handler(bm, process_question, message.from_user.id, message.from_user.first_name)

def process_question(message, user_id, user_name):
    user_questions = message.text.strip()
    
    cursor.execute(
        "INSERT INTO feedback (user, name, questions) VALUES (?, ?, ?)",
        (user_id, user_name, user_questions)
    )
    conn.commit()
    
    bot.send_message(message.chat.id, "–°–ø–∞—Å–∏–±–æ! –í–∞—à –≤–æ–ø—Ä–æ—Å —Å–æ—Ö—Ä–∞–Ω–µ–Ω, –∏ –º—ã —Å–∫–æ—Ä–æ –æ—Ç–≤–µ—Ç–∏–º –Ω–∞ –Ω–µ–≥–æ.")
    time.sleep(2)
    help(message)




if __name__ == '__main__':
    manager = DB_Manager(DATABASE)
    bot.infinity_polling()
